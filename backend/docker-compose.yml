version: "3.8"

services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     NODE_ENV: development
  #     PORT: 5000
  #     DB_HOST: localhost
  #     DB_USER: root
  #     DB_PASSWORD: password
  #     DB_NAME: vendor_shop_management
  #     DB_PORT: 3307
  #     REDIS_HOST: localhost
  #     REDIS_PORT: 6379
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   depends_on:
  #     - mysql
  #     - redis
  #   network_mode: "host"
  #   restart: unless-stopped

  mysql:
    image: mysql:8.0
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: vendor_shop_management
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./config/init/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./config/init/init-mysql.sh:/docker-entrypoint-initdb.d/init-mysql.sh
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-ppassword",
        ]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data:
